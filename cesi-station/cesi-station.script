a_image = Image("a.png");
b_image = Image("b.png");
left_image = Image("left.png");
right_image = Image("right.png");
top_image = Image("top.png");
bottom_image = Image("bottom.png");

banner_image = Image("banner.png");
banner_sprite = Sprite(banner_image);

banner_sprite.SetX(Window.GetWidth()  / 2 - banner_image.GetWidth()  / 2);
banner_sprite.SetY(Window.GetHeight() / 2 - banner_image.GetHeight() / 2);
banner_sprite.SetZ(100);

fun place_controller_sprite(sprite, x, y){
  sprite.SetX((Window.GetWidth()/2 + x) - sprite.GetImage().GetWidth()  / 2);
  sprite.SetY((Window.GetHeight()/2 + y) - sprite.GetImage().GetHeight()  / 2);
  sprite.SetOpacity(Math.Random());
  sprite.SetZ(0);
}

a_sprite_1 = Sprite(a_image);
a_sprite_2 = Sprite(a_image);
b_sprite_1 = Sprite(b_image);
b_sprite_2 = Sprite(b_image);
b_sprite_3 = Sprite(b_image);
right_sprite_1 = Sprite(right_image);
right_sprite_2 = Sprite(right_image);
top_sprite_1 = Sprite(top_image);
top_sprite_2 = Sprite(top_image);
left_sprite_1 = Sprite(left_image);
bottom_sprite_1 = Sprite(bottom_image);
bottom_sprite_2 = Sprite(bottom_image);
bottom_sprite_3 = Sprite(bottom_image);

controls = [ a_sprite_1, a_sprite_2, b_sprite_1, b_sprite_2, b_sprite_3, right_sprite_1, right_sprite_2, top_sprite_1, top_sprite_2, left_sprite_1, bottom_sprite_1, bottom_sprite_2, bottom_sprite_3 ];

controls_rising = [Math.Random(),Math.Random(),Math.Random(),Math.Random(),Math.Random(),Math.Random(),Math.Random(),Math.Random(),Math.Random(),Math.Random(),Math.Random(),Math.Random(),Math.Random()];

place_controller_sprite(a_sprite_1, -350, 250);
place_controller_sprite(a_sprite_2, 125, -200);
place_controller_sprite(b_sprite_1, -300, 75);
place_controller_sprite(b_sprite_2, 350, 50);
place_controller_sprite(b_sprite_3, 175, 300);
place_controller_sprite(right_sprite_1, -330, -100);
place_controller_sprite(right_sprite_2, -150, 150);
place_controller_sprite(top_sprite_1, -400, -275);
place_controller_sprite(top_sprite_2, 400, 225);
place_controller_sprite(left_sprite_1, -80, -320);
place_controller_sprite(bottom_sprite_1, -180, -190);
place_controller_sprite(bottom_sprite_2, 100, 185);
place_controller_sprite(bottom_sprite_3, 300, -100);

# Animation

opacity_ratio = 0.01;

fun refresh_callback ()
{
  for(i = 0; i < 13; i++){
    if(controls_rising[i] > 0.5 && Plymouth.GetMode () != "shutdown"){
      if(controls[i].GetOpacity() + opacity_ratio >= 1){
        controls[i].SetOpacity(1);
        controls_rising[i] = 0;
      } else {
        controls[i].SetOpacity(controls[i].GetOpacity() + opacity_ratio);
      }
    } else {
      if(controls[i].GetOpacity() - opacity_ratio <= 0){
        controls[i].SetOpacity(0);
        controls_rising[i] = 1;
      } else {
        controls[i].SetOpacity(controls[i].GetOpacity() - opacity_ratio);
      }
    }
  } 
}
  
Plymouth.SetRefreshFunction (refresh_callback);

#----------------------------------------- Quit --------------------------------

fun quit_callback ()
{
  # A la fermeture
}

Plymouth.SetQuitFunction(quit_callback);

#----------------------------------------- Progress --------------------------------

fun progress_callback (duration, progress)
{
  # Lors de la progression
}

Plymouth.SetBootProgressFunction(progress_callback);

#----------------------------------------- Dialogue --------------------------------

status = "normal";

fun dialog_setup()
  {
    local.box;
    local.lock;
    local.entry;
    
    box.image = Image("box.png");
    lock.image = Image("lock.png");
    entry.image = Image("entry.png");
    
    box.sprite = Sprite(box.image);
    box.x = Window.GetWidth()  / 2 - box.image.GetWidth ()/2;
    box.y = Window.GetHeight() / 2 - box.image.GetHeight()/2;
    box.z = 10000;
    box.sprite.SetPosition(box.x, box.y, box.z);
    
    lock.sprite = Sprite(lock.image);
    lock.x = box.x + box.image.GetWidth()/2 - (lock.image.GetWidth() + entry.image.GetWidth()) / 2;
    lock.y = box.y + box.image.GetHeight()/2 - lock.image.GetHeight()/2;
    lock.z = box.z + 1;
    lock.sprite.SetPosition(lock.x, lock.y, lock.z);
    
    entry.sprite = Sprite(entry.image);
    entry.x = lock.x + lock.image.GetWidth();
    entry.y = box.y + box.image.GetHeight()/2 - entry.image.GetHeight()/2;
    entry.z = box.z + 1;
    entry.sprite.SetPosition(entry.x, entry.y, entry.z);
    
    global.dialog.box = box;
    global.dialog.lock = lock;
    global.dialog.entry = entry;
    global.dialog.bullet_image = Image("bullet.png");
    dialog_opacity (1);
  }
    
fun dialog_opacity(opacity)
  {
    dialog.box.sprite.SetOpacity (opacity);
    dialog.lock.sprite.SetOpacity (opacity);
    dialog.entry.sprite.SetOpacity (opacity);
    for (index = 0; dialog.bullet[index]; index++)
      {
        dialog.bullet[index].sprite.SetOpacity(opacity);
      }
  }

fun display_normal_callback ()
  {
    global.status = "normal";
    if (global.dialog)
      dialog_opacity (0);
  }

fun display_password_callback (prompt, bullets)
  {
    global.status = "password";
    if (!global.dialog)
	dialog_setup();
    else
	dialog_opacity(1);
    for (index = 0; dialog.bullet[index] || index < bullets; index++)
      {
        if (!dialog.bullet[index])
          {
            dialog.bullet[index].sprite = Sprite(dialog.bullet_image);
            dialog.bullet[index].x = dialog.entry.x + index * dialog.bullet_image.GetWidth();
            dialog.bullet[index].y = dialog.entry.y + dialog.entry.image.GetHeight() / 2 - dialog.bullet_image.GetHeight() / 2;
            dialog.bullet[index].z = dialog.entry.z + 1;
            dialog.bullet[index].sprite.SetPosition(dialog.bullet[index].x, dialog.bullet[index].y, dialog.bullet[index].z);
          }
        if (index < bullets)
          dialog.bullet[index].sprite.SetOpacity(1);
        else
          dialog.bullet[index].sprite.SetOpacity(0);
      }
  }

Plymouth.SetDisplayNormalFunction(display_normal_callback);
Plymouth.SetDisplayPasswordFunction(display_password_callback);

#----------------------------------------- Message --------------------------------

message_sprite = Sprite();
message_sprite.SetPosition(10, 10, 10000);

fun message_callback (text)
{
  my_image = Image.Text(text, 1, 1, 1);
  message_sprite.SetImage(my_image);
}

Plymouth.SetMessageFunction(message_callback);
